<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta content="text/html; charset=ISO-8859-1" http-equiv="content-type">
    <title>Référence Python 3 et Interface graphique Tkinter, Frame, LabelFrame</title>
    <meta content="A. Oumnad" name="author">
    <meta content="Mini référence pour le langage de programmation Python 3 et l'interface graphique Tkinter"
      name="description">
    <meta content="Python, Python3, Python 3, Tkinter, interface graphique, GUI, Tkinter GUI, Frame, LabelFrame"
      name="keywords">
    <link rel="shortcut icon" type="image/png" href="images/py.png" \="">
    <style type="text/css">
        #titre {  
          background-color: #ccccff;  
        }
      
        #soustitre {  
          background-color: #80cc90;
          font-style: italic; 
          font-size: xx-large; 
          font-weight: bold; 
          text-align: center; 
          color: #990000;
        }
        
        #navigation {  
          width: 23%; 
          min-height: 1000px;
          float: left;  
          font-family: Cambria;
        }
        
        #contenu{  
          width: 72%;
          min-height: 1000px;
          float: right;  
          background-color: #ffff99;  
          font-family: Cambria;
          padding: 10px;
          margin-top: 10px;
          text-align: justify;
          }
      
        #icone{
         width: 7%;
         float: left; 
         margin: 3px;
         }
      
     </style>
  </head>
  <body style="       background-color: silver; width: 99%; height: 100%;">
    <table style="width: 100%; font-family: Cambria;" border="0">
      <tbody>
        <tr id="titre">
          <td> <img id="icone" alt="" src="images/python.jpg">
            <h1 style="text-align: center;"><em>Le langage <span style="color: #990000;">python
                  3</span> et l'Interface Graphique <span style="color: #990000;">Tkinter</span><br>
              </em></h1>
            <h1> </h1>
          </td>
        </tr>
        <tr id="soustitre">
          <td>Les widgets Frame et LabelFrame<br>
          </td>
        </tr>
      </tbody>
    </table>
    <object id="navigation" data="python3_sommaire.html"></object>
    <div id="contenu">
      <h2><span style="color: #990000;"><em>Le widget Frame</em></span></h2>
      <p>Ce widget est un conteneur qui peut recevoir d'autres widgets. <br>
      </p>
      <p>Le positionnement des widgets à l'intérieur de chaque frame est
        indépendant du positionneur utilisé dans le parent du Frame. <br>
      </p>
      <h2><em style="color: #990000;">Syntaxe:<br>
        </em></h2>
      <dl>
        <dd>
          <h3><span style="color: #000099;"><em>from tkinter import *</em></span></h3>
        </dd>
        <dd>
          <h3><span style="color: #000099;"><em>nom = Frame(parent,
                option=valeur, option=valeur, . . .)</em></span></h3>
        </dd>
      </dl>
      <br>
      <strong><em>Attention</em></strong>: Il semble (d'après mes essais) que si
      on utilise le positionneur <em>.pack()</em> sur la ligne de création du
      Frame. Quelque chose du genre: <span style="font-family: Cambria;"><em style="color: #000099;">f1
          = Frame(root, ....).pack(.....)</em> On a des problèmes ensuite pour
        positionner des widgets dans le frame. Pour éviter ce problème, Que ce
        soit avec le widget frame ou un autre widget, utiliser le format
        suivant:</span><br>
      <div style="margin-left: 40px;"> <span style="color: #000099;"><em>f1 =
            Frame(...)</em></span><br>
        <em> </em><em style="color: #000099;">f1.pack(...)</em><br>
      </div>
      <span style="color: red;"><em> </em></span><br>
      <h3><span style="color: #990000;"><em>Quelques options du widget Frame</em></span></h3>
      <table style="width: 896px; height: 458px;" border="1" cellpadding="5" cellspacing="0">
        <tbody>
          <tr>
            <td style="width: 140px"> <strong><em>background (bg)</em></strong><br>
            </td>
            <td style="width: 480px"> Couleur du widget "red", "blue", "green",
              "yellow", . . . ou #rrvvbb<br>
            </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>borderwidth&nbsp; (bd) </em></strong><br>
            </td>
            <td style="width: 480px">Epaisseur de la bordure en pixels. Par
              défaut, sa valeur vaut 0, ce qui rend la bordure invisible<br>
            </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>cursor</em></strong><br>
            </td>
            <td style="width: 480px"> <a target="_top" href="python3_curseurs_souris.html">Curseur
                </a>de la souris quand celle-ci survole le widget<br>
            </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>height</em></strong><br>
            </td>
            <td style="width: 480px"> Hauteur du Frame. <em>3</em> =&gt; 3
              pixels,&nbsp;&nbsp; <em>'3m'</em> =&gt; 3 mm,&nbsp;&nbsp; <em>'1c'</em>
              =&gt; 1 cm, <em>'0.5i'</em> =&gt; 0.5 inch<br>
              Ce paramètre est ignoré dès que des widgets sont placés dans le
              frame qui adapte ses dimensions aux widgets qu'il contient. Pour
              maintenir cette dimension, il faut utiliser la méthode
              .grid_propagate(0)<br>
            </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>padx</em></strong><br>
            </td>
            <td style="width: 480px"> Marge horizontale du contenu du frame par
              rapport aux limites<br>
              <em>padx=3</em> =&gt; 3 pixels,&nbsp;&nbsp; <em>padx='3m'</em>
              =&gt; 3 mm,&nbsp;&nbsp; <em>padx='1c'</em> =&gt; 1 cm, <em>padx='0.5i'</em>
              =&gt; 0.5 inch<br>
            </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>pady</em></strong><br>
            </td>
            <td style="width: 480px"> Marges verticales<br>
            </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>relief </em></strong><br>
            </td>
            <td style="width: 480px"> <a href="python3_attributs_standard.html">Relief
                </a>de la bordure du Frame.&nbsp; Défaut = FLAT. Le relief ne
              devient visible que si on donne une valeur &gt;0 à l'option <strong><em>borderwidth&nbsp;
                  </em></strong> </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>width</em></strong><br>
            </td>
            <td style="width: 480px"> Largeur du Frame. <em>3</em> =&gt; 3
              pixels,&nbsp;&nbsp; <em>'3m'</em> =&gt; 3 mm,&nbsp;&nbsp; <em>'1c'</em>
              =&gt; 1 cm, <em>'0.5i'</em> =&gt; 0.5 inch<br>
              <br>
              Ce paramètre est ignoré dès que des widgets sont placés dans le
              frame qui adapte ses dimensions aux widgets qu'il contient. Si on
              utilise le positionneur grid(), on peut maintenir cette dimension,
              il faut utiliser la méthode .grid_propagate(0)<br>
            </td>
          </tr>
        </tbody>
      </table>
      &nbsp;
      <h2><span style="color: #990000;"><em>Le widget LabelFrame</em></span></h2>
      <p style="text-align: left;">Ce widget est le même que le widget frame
        avec en plus la possibilité d'afficher un texte sur la bordure du frame.
      </p>
      <p style="text-align: center;">&nbsp;<img alt="labelframe" src="images/labelframe.png"></p>
      <h2><em style="color: #990000;">Syntaxe:<br>
        </em></h2>
      <dl>
        <dd>
          <h3><span style="color: #000099;"><em>from tkinter import *</em></span></h3>
        </dd>
        <dd>
          <h3><span style="color: #000099;"><em>nom = LabelFrame(parent,
                option=valeur, option=valeur, . . .)</em></span></h3>
        </dd>
      </dl>
      <strong><em></em></strong>
      <h3><span style="color: #990000;"><em>En plus des option de Frame,&nbsp;
            LabelFrame supporte les options suivantes<br>
          </em></span></h3>
      <table style="text-align: left; margin-left: 0px; margin-right: auto; width: 95%;"
        border="1" cellpadding="10" cellspacing="0">
        <tbody>
          <tr>
            <td style="width: 140px"> <strong><em>labelanchor</em></strong><br>
            </td>
            <td style="width: 480px"> position (<a href="python3_attributs_standard.html">anchor</a>)
              du texte de la bordure&nbsp;<br>
            </td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>labelwidget</em></strong><br>
            </td>
            <td style="width: 480px"> permet de placer un widget à la place du
              texte dans la bordure. Il faut que le widget soit fils du
              LabelFrame<br>
            </td>
          </tr>
          <tr>
            <td><strong><em>relief </em></strong></td>
            <td><a href="file:///D:/Documents/Mes%20sites%20Web/www.oumnad.123.fr/Python3_Frame/python3_attributs_standard.html">Relief
                </a>de la bordure.&nbsp; Défaut = GROOVE</td>
          </tr>
          <tr>
            <td style="width: 140px"> <strong><em>text</em></strong><br>
            </td>
            <td style="width: 480px"> texte de la bordure<br>
            </td>
          </tr>
        </tbody>
      </table>
      <div style="clear: both">&nbsp;</div>
      Exemple:<br>
      <table style="width: 100%;" border="1" cellpadding="10">
        <tbody>
          <tr>
            <td style="width: 100%; background-color: #66cccc;"><em>from tkinter
                import *</em><em><img style="float: right;" alt="frame1" src="images/frame_labelframe1.PNG"><br>
              </em><em>fp =Tk()</em><em><br>
              </em><em>F1 = Frame(fp, bg='gold', bd=5,relief = RAISED)</em><em><br>
              </em><em>F2 = LabelFrame(fp, text = 'Groupe 2', labelanchor = N)</em><em><br>
              </em><em>B1 = Button(F1,text='Bouton 1 F1')</em><em><br>
              </em><em>B2 = Button(F1,text='Bouton 2 F1')</em><em><br>
              </em><em>B3 = Button(F1,text='Bouton 3 F1')</em><em><br>
              </em><em>B4 = Button(F2,text='Bouton 1 F2')</em><em><br>
              </em><em>B5 = Button(F2,text='Bouton 2 F2')</em><em><br>
              </em><em>B6 = Button(F2,text='Bouton 3 F2')</em><em><br>
              </em><em>B1.pack(padx = 10, pady = 10)</em><em><br>
              </em><em>B2.pack(padx = 10, pady = 10)</em><em><br>
              </em><em>B3.pack(padx = 10, pady = 10)</em><em><br>
              </em><em>B4.pack(padx = 10, pady = 10)</em><em><br>
              </em><em>B5.pack(padx = 10, pady = 10)</em><em><br>
              </em><em>B6.pack(padx = 10, pady = 10)</em><em><br>
              </em><em><br>
              </em><em>F1.pack(padx =10, pady = 10)</em><em><br>
              </em><em>F2.pack(padx =10, pady = 10)</em><em><br>
              </em><em><br>
              </em><em>fp.mainloop()</em><em><br>
              </em><em><br>
              </em></td>
          </tr>
        </tbody>
      </table>
      <br>
      Si on positionne le frame F1 à gauche juste en ajoutant <em style="color: #000099;">side=LEFT</em>
      à la ligne <em style="color: #000099;">F1.pack(padx =10, pady = 10)</em>&nbsp;
      soit:<br>
      <em style="color: #000099;">F1.pack(side=LEFT, padx =10, pady = 10)</em>,
      on obtient:<br>
      <div style="text-align: center;"><img alt="frame 2" src="images/frame_labelframe2.PNG"><br>
      </div>
      <br>
      <br>
      <br>
      <br>
      <br>
    </div>
    <script language="JavaScript">
         document.getElementById('navigation').height= document.getElementById('contenu').scrollHeight;
    </script>
  </body>
</html>
